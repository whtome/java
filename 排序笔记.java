数据结构与算法

数据结构:计算机组织存储数据的方式
线性表:数组、链表

算法:作用于特定数据集上的运算流程

*****排序算法*****

1.如何衡量一个排序算法的优劣

1.1 算法的执行效率
a.最好、最坏、平均时间复杂度
b.系数、低阶、常数(冒泡、插入),由于n的大小并不是足够大
c.比较或交换次数。

1.2 算法的内存消耗:通过空间复杂度来衡量
原地排序:特指空间复杂度为O(1)的排序算法

***1.3 排序算法的稳定性***
稳定性 : 若待排序的集合中存在值相等的元素，经过排序之后，相等元素之间原有的顺序是否改变.若未改变，则称此排序为稳定性排序。

排序前：2,9,3,5,8,3,4
排序后:2,3,3,4,5,8,9

订单:金额、下单时间
300 17:00:00      300 18:00:00
301 14:00:00   -> 300 17:00:00  
300 18:00:00      301 14:00:00

需求:如何按照金额排序后的数据，时间也是有序的?相同金额的订单按照时间顺序排序。

解决:先按照时间顺序排序一次，再按照金额进行稳定性的排序。

2.排序分类
内部排序:排序过程无需借助外部存储器(如磁盘)，所有排序操作均在内存中完成。默认说的排序都是内部排序

外部排序:若参与排序的元素过多，数据量过大，内存放不下,需要借助外部存储器来进行排序，
如桶排序。

无论是内部排序还是外部排序，最终数据的排序一定在内存中进行。


内部排序按照排序思路分为以下四类

2.1插入排序法:
直接插入排序
时间复杂度O(n^2)
空间复杂度O(1)
稳定性排序算法

希尔排序

冒泡排序与插入排序



2.2选择排序:
选择排序

堆排序(二叉树之后讲)

2.3交换排序:
冒泡排序:
时间复杂度O(n^2)
空间复杂度O(1)
稳定性排序

快速排序

2.4归并排序

3大O(n^2)时间复杂度排序
冒泡、插入、选择

3.冒泡排序
冒泡排序只会操作相邻的两个元素。每次对相邻的两个元素做大小比较，看是否满足大小关系。
一次冒泡至少会让一个元素移动到最终位置(冒泡)

4,5,6,1,1,2,3 要求按照升序排序

优化:设置标志位，若在某次循环结束后发现并没有元素交换，认为数据集已经有序，
停止循环。

算法的执行效率
最好情况
数据集本身就是一个有序集合,O(n)

最坏情况
数据集完全逆序,O(n^2)

平均情况O(n^2)

算法的内存消耗:O(1)，无需开辟新的空间，仅仅是原有数据做交换。
冒泡排序是一个原地排序算法。

算法的稳定性
冒泡排序由于相邻元素发生大小关系变换才会交换次序，所以当两个元素大小相等时，
并不会改变其相对顺序。

4.插入排序:基于有序集合插入思想的排序算法
3,3,4,5,2,1

直接插入排序:基于有序数组元素内容的插入得来
核心思想:将待排序的数据分为两个区间，已排序区间与待排序区间。
算法刚开始时，已排序空间有一个元素，在待排序空间中选择第一个元素与已排序空间的最后一个元素比较，若比已排序的最大元素大直接放入已排序空间最后一个位置，否则需要找到合适位置后进行插入。

时间复杂度
最好O(n)
最坏O(n^2)

空间复杂度
原地排序算法

稳定性
稳定性算法


希尔排序
